name: Build and Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]

    steps:
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions/checkout@v2
      - name: Build Client
        run: cargo build --release --bin portal --verbose
      - name: Compress
        run: tar -czvf portal-${{ matrix.os }}.tar.gz target/release/portal
      - name: Upload Client Binary
        uses: actions/upload-artifact@v1
        with:
          name: portal-${{ matrix.os }}
          path: target/release/portal

  build_win:
    runs-on: windows-latest
    steps:
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions/checkout@v2
      - name: Build Client
        run: cargo build --release --bin portal --verbose
      - name: Upload Client Binary
        uses: actions/upload-artifact@v1
        with:
          name: portal-windows-latest.exe
          path: target/release/portal.exe

  publish:
    needs: [build, build_win]
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}    
        
      - name: Download macOS
        uses: actions/download-artifact@v1
        with:
          name: portal-macOS-latest
          path: macOS/portal/${{ steps.get_version.outputs.VERSION }}/bin/

      - name: Download ubuntu
        uses: actions/download-artifact@v1
        with:
          name: portal-ubuntu-latest
          path: linux/

      - name: Download windows
        uses: actions/download-artifact@v1
        with:
          name: portal-windows-latest.exe
          path: windows/

      - name: Compress
        run: |
          chmod +x macOS/portal/${{ steps.get_version.outputs.VERSION }}/bin/portal
          chmod +x linux/portal
          export TAG="${{ steps.get_version.outputs.VERSION }}"
          cp windows/portal.exe portal-windows.exe
          tar -C macOS/ -czvf "portal-$TAG.catalina.bottle.tar.gz" portal/${{ steps.get_version.outputs.VERSION }}/bin/portal
          cp "portal-$TAG.catalina.bottle.tar.gz" "portal-$TAG.big_sur.bottle.tar.gz"
          tar -C linux/ -czvf portal-linux.tar.gz portal

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "portal-${{ steps.get_version.outputs.VERSION }}.big_sur.bottle.tar.gz,portal-${{ steps.get_version.outputs.VERSION }}.catalina.bottle.tar.gz,portal-linux.tar.gz,portal-windows.exe"
          token: ${{ secrets.GITHUB_TOKEN }}
